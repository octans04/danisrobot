#include <afstandssensor.h>

AfstandsSensor afstandssensorleft(13, 12);
AfstandsSensor afstandssensorright(6, 4);

float distD = afstandssensorright.afstandCM();
float distI = afstandssensorleft.afstandCM();

float relacionI;
float relacionD;
float correccionI;
float correccionD;

int Kp = 2500;

int enA = 5;
int in1 = 7;
int in2 = 8;
int enB = 11;
int in3 = 9;
int in4 = 10;

void setup() {
  Serial.begin(9600);
  pinMode(in1, OUTPUT);
  pinMode(in2, OUTPUT);
  pinMode(in3, OUTPUT);
  pinMode(in4, OUTPUT);
  pinMode(enA, OUTPUT);
  pinMode(enB, OUTPUT);
  digitalWrite(in1, LOW);
  digitalWrite(in2, LOW);
  digitalWrite(in3, LOW);
  digitalWrite(in4, LOW);

}

void loop() {

  Serial.print("Left= ");
  Serial.println(afstandssensorleft.afstandCM());
  Serial.print("Right= ");
  Serial.println(afstandssensorright.afstandCM());
  Serial.print("relacionI= ");
  Serial.println(relacionI);
  Serial.print("relacionD= ");
  Serial.println(relacionD);
  Serial.print("correccionI=");
  Serial.println(correccionI);
  Serial.print("correccionD= ");
  Serial.println(correccionD);
  Serial.print("---------------------------------- ");
  

  m1recto();
  m2recto();

  if (afstandssensorright.afstandCM() > afstandssensorleft.afstandCM()) {
    relacionD = afstandssensorright.afstandCM() / afstandssensorleft.afstandCM();
    relacionI = 0;
    m1avanza();
    if (relacionD >= 1.75) {
      correccionD = relacionD;
    }
    if (relacionD < 1.75) {
      correccionD = relacionD + 0.75;
    }
    analogWrite(enA, correccionD * Kp);

  }

  if (afstandssensorleft.afstandCM() > afstandssensorright.afstandCM()) {
    relacionI = afstandssensorleft.afstandCM() / afstandssensorright.afstandCM();
    relacionD = 0;
    m2avanza();
    if (relacionI < 1.75) {
      correccionI = relacionI + 2.5;
    }
    if (relacionI >= 1.75) {
      correccionI = relacionI;
    }
    analogWrite(enB, correccionI * Kp);
  }


}
void m1avanza() {
  analogWrite(enB, 113);
  digitalWrite(in4, HIGH);
  digitalWrite(in3, LOW);
}

void m2avanza() {
  analogWrite(enA, 125);
  digitalWrite(in2, LOW);
  digitalWrite(in1, HIGH);
}
void m1recto() {
  analogWrite(enB, 150);
  digitalWrite(in4, HIGH);
  digitalWrite(in3, LOW);
}

void m2recto() {
  analogWrite(enA, 150);
  digitalWrite(in2, LOW);
  digitalWrite(in1, HIGH);
}
